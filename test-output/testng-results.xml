<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-11-15T12:38:23 MST" name="Default Suite" finished-at="2021-11-15T12:38:23 MST" duration-ms="344">
    <groups>
    </groups>
    <test started-at="2021-11-15T12:38:23 MST" name="LearningSelenium" finished-at="2021-11-15T12:38:23 MST" duration-ms="344">
      <class name="org.learning.com.MyTest1">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:org.learning.com.MyTest1@5d47c63f]" started-at="2021-11-15T12:38:22 MST" name="beforeSuite" finished-at="2021-11-15T12:38:23 MST" duration-ms="156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="setTest()[pri:0, instance:org.learning.com.MyTest1@5d47c63f]" started-at="2021-11-15T12:38:23 MST" name="setTest" finished-at="2021-11-15T12:38:23 MST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTest -->
        <test-method signature="test1()[pri:0, instance:org.learning.com.MyTest1@5d47c63f]" started-at="2021-11-15T12:38:23 MST" name="test1" finished-at="2021-11-15T12:38:23 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:org.learning.com.MyTest1@5d47c63f]" started-at="2021-11-15T12:38:23 MST" name="getResult" finished-at="2021-11-15T12:38:23 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test1 status=SUCCESS method=MyTest1.test1()[pri:0, instance:org.learning.com.MyTest1@5d47c63f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="test1()[pri:0, instance:org.learning.com.MyTest1@5d47c63f]" started-at="2021-11-15T12:38:23 MST" name="test1" finished-at="2021-11-15T12:38:23 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:org.learning.com.MyTest1@5d47c63f]" started-at="2021-11-15T12:38:23 MST" name="getResult" finished-at="2021-11-15T12:38:23 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test1 status=SUCCESS method=MyTest1.test1()[pri:0, instance:org.learning.com.MyTest1@5d47c63f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="test1()[pri:0, instance:org.learning.com.MyTest1@5d47c63f]" started-at="2021-11-15T12:38:23 MST" name="test1" finished-at="2021-11-15T12:38:23 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:org.learning.com.MyTest1@5d47c63f]" started-at="2021-11-15T12:38:23 MST" name="getResult" finished-at="2021-11-15T12:38:23 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test1 status=SUCCESS method=MyTest1.test1()[pri:0, instance:org.learning.com.MyTest1@5d47c63f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:org.learning.com.MyTest1@5d47c63f]" started-at="2021-11-15T12:38:23 MST" name="getResult" finished-at="2021-11-15T12:38:23 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test2 status=FAILURE method=MyTest1.test2()[pri:0, instance:org.learning.com.MyTest1@5d47c63f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="test3()[pri:0, instance:org.learning.com.MyTest1@5d47c63f]" started-at="2021-11-15T12:38:23 MST" name="test3" finished-at="2021-11-15T12:38:23 MST" duration-ms="0" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[skipping this test case]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: skipping this test case
at org.learning.com.MyTest1.test3(MyTest1.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method signature="test2()[pri:0, instance:org.learning.com.MyTest1@5d47c63f]" started-at="2021-11-15T12:38:23 MST" name="test2" finished-at="2021-11-15T12:38:23 MST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at org.learning.com.MyTest1.test2(MyTest1.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:org.learning.com.MyTest1@5d47c63f]" started-at="2021-11-15T12:38:23 MST" name="getResult" finished-at="2021-11-15T12:38:23 MST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test3 status=SKIP method=MyTest1.test3()[pri:0, instance:org.learning.com.MyTest1@5d47c63f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="method1()[pri:0, instance:org.learning.com.MyTest1@5d47c63f]" started-at="2021-11-15T12:38:23 MST" name="method1" finished-at="2021-11-15T12:38:23 MST" duration-ms="266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
      </class> <!-- org.learning.com.MyTest1 -->
    </test> <!-- LearningSelenium -->
  </suite> <!-- Default Suite -->
</testng-results>
